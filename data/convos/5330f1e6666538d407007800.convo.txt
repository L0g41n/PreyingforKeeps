idRef {
  id: "5330f1e6666538d407007800"
}
ui_name: "SeaHawk.SubQuestsAssign"
nodes {
  idRef {
    id: "5330f1f9666538d407007806"
  }
  index: 0
  text: "$(scene.sWheelerQuest)"
  branches {
    responseText: "Yeah?   What\'s up Wheeler?"
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "bAAGuns"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: 1
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "5347613c666538800b005fc1"
    }
  }
  branches {
    responseText: "Talk to me.   What\'s happening?"
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "bRadar"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: 5
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "53476148666538800b005fc2"
    }
  }
  branches {
    responseText: "Whatcha got, Wheeler?"
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "bHatches"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: 7
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "5347614d666538800b005fc3"
    }
  }
  branches {
    responseText: "Hit me."
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "bMageGuard"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: 9
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "53476151666538800b005fc4"
    }
  }
  branches {
    responseText: "Whats up?"
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "bGuards"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: 12
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "53476155666538800b005fc5"
    }
  }
  branches {
    responseText: "Excellent.   Arc, lets hit that security building, and see if we can\'t get paid tonight.\nYou ready ArchAngel?"
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "iSubQuestCount"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 0
        }
      }
      ops {
        functionName: "Evaluate Goal"
        args {
          call_value {
            functionName: "Get Map Item (Goal)"
            args {
              string_value: "SubQuest: AA Guns"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "GoalStatus"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 0
            }
          }
        }
      }
      ops {
        functionName: "Evaluate Goal"
        args {
          call_value {
            functionName: "Get Map Item (Goal)"
            args {
              string_value: "SubQuest: Disable the Radar Jammer"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "GoalStatus"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 0
            }
          }
        }
      }
      ops {
        functionName: "Evaluate Goal"
        args {
          call_value {
            functionName: "Get Map Item (Goal)"
            args {
              string_value: "SubQuest: Eliminate Guard Captain"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "GoalStatus"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 0
            }
          }
        }
      }
      ops {
        functionName: "Evaluate Goal"
        args {
          call_value {
            functionName: "Get Map Item (Goal)"
            args {
              string_value: "SubQuest: Seal The Hatch"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "GoalStatus"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 0
            }
          }
        }
      }
      ops {
        functionName: "Evaluate Goal"
        args {
          call_value {
            functionName: "Get Map Item (Goal)"
            args {
              string_value: "SubQuest: Take out the sentries."
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "GoalStatus"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 0
            }
          }
        }
      }
    }
    nextNodeIndex: 15
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "53476159666538800b005fc6"
    }
  }
  branches {
    responseText: "What?   Frag!   Alright, let me think of something..."
    conditions {
      ops {
        functionName: "Evaluate If Actor is Inside Region"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "AreOrAreNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Region)"
            args {
              string_value: "534c9cb16665382c0b0018c9"
            }
          }
        }
      }
    }
    nextNodeIndex: 16
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "53529ff1666538800a007ed3"
    }
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "534a2279613131440d000dc1"
  }
}
nodes {
  idRef {
    id: "5330f24f666538d407007809"
  }
  index: 1
  text: "The Anti-Aircraft cannons just came online. It\'s tracking me, and my sensors are telling me its going to lock in a firing solution any minute.  Can you find some way to disable them before you have to swim back to Seattle?"
  branches {
    responseText: "{{CC}}[Accept]{{/CC}}I\'m on it.   Hang tight, I\'ll figure something out..."
    actions {
      ops {
        functionName: "Enable/Disable Interactable Object"
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "EnableOrDisable"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (InteractableObject)"
            args {
              string_value: "533ca488666538600b005f9f"
            }
          }
        }
      }
      ops {
        functionName: "Enable/Disable Interactable Object"
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "EnableOrDisable"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (InteractableObject)"
            args {
              string_value: "533ca060666538600b005f91"
            }
          }
        }
      }
      ops {
        functionName: "Set Waypoint on Actor"
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "PrimaryOrSecondary"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Actor)"
            args {
              string_value: "533ca488666538600b005f9f"
            }
          }
        }
      }
      ops {
        functionName: "Set Waypoint on Actor"
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "PrimaryOrSecondary"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Actor)"
            args {
              string_value: "533ca060666538600b005f91"
            }
          }
        }
      }
      ops {
        functionName: "Set Goal Status"
        args {
          call_value {
            functionName: "Get Map Item (Goal)"
            args {
              string_value: "SubQuest: AA Guns"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "GoalStatus"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: 2
  }
  branches {
    responseText: "{{CC}}[Decline]{{/CC}} Just fly low, and give them a wide berth... I\'ve got my hands full down here already."
    nextNodeIndex: 4
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "534a2279613131440d000dc1"
  }
}
nodes {
  idRef {
    id: "5340c2d1666538e80b006bc9"
  }
  index: 2
  text: "We can spam our transponder number into the main batterys friend or foe system registry."
  branches {
    responseText: "Uh... What?"
    nextNodeIndex: 3
  }
  branches {
    responseText: "Do it."
    nextNodeIndex: -1
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "5345f497666538e00a005f95"
  }
}
nodes {
  idRef {
    id: "5340c320666538e80b006bcd"
  }
  index: 3
  text: "We don\'t have the time to go into the entire process... but basically we add our plane into the list of the guns safe crafts, guns stay active... but won\'t be targeting us."
  branches {
    responseText: "Oh.   That sounds way more useful than just knocking them out.   Lets do it, Arc."
    nextNodeIndex: -1
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "5345f497666538e00a005f95"
  }
}
nodes {
  idRef {
    id: "533ca973666538600b005fd1"
  }
  index: 4
  text: "Copy that, $(story.Nickname).   I\'ll do what I can... but this bird is going to take a bit of damage.  "
  branches {
    responseText: "Copy that.   Do your best, Wheeler."
    actions {
      ops {
        functionName: "Enable/Disable Interactable Object"
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "EnableOrDisable"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (InteractableObject)"
            args {
              string_value: "533ca488666538600b005f9f"
            }
          }
        }
      }
      ops {
        functionName: "Enable/Disable Interactable Object"
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "EnableOrDisable"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (InteractableObject)"
            args {
              string_value: "533ca060666538600b005f91"
            }
          }
        }
      }
      ops {
        functionName: "Set Goal Status"
        args {
          call_value {
            functionName: "Get Map Item (Goal)"
            args {
              string_value: "SubQuest: AA Guns"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "GoalStatus"
            }
            args {
              int_value: 3
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
      }
      ops {
        functionName: "Set Variable (bool)"
        args {
          call_value {
            functionName: "Get Story Variable (bool)"
            args {
              string_value: "529d4c2061313190d0006953"
            }
            args {
              string_value: "bPlaneDamaged"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
      ops {
        functionName: "Clear Waypoint from Actor"
        args {
          call_value {
            functionName: "Get Map Item (Actor)"
            args {
              string_value: "533ca488666538600b005f9f"
            }
          }
        }
      }
      ops {
        functionName: "Clear Waypoint from Actor"
        args {
          call_value {
            functionName: "Get Map Item (Actor)"
            args {
              string_value: "533ca060666538600b005f91"
            }
          }
        }
      }
      ops {
        functionName: "Send Event After Delay"
        args {
          call_value {
            functionName: "Get Map Item (Event)"
            args {
              string_value: "SeaHawk.QuestCount"
            }
          }
        }
        args {
          call_value {
            functionName: "Random (float)"
            args {
              float_value: 10
            }
            args {
              float_value: 35
            }
          }
        }
      }
    }
    nextNodeIndex: -1
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "534a2279613131440d000dc1"
  }
}
nodes {
  idRef {
    id: "5340c14b666538e80b006ba0"
  }
  index: 5
  text: "We\'re getting a whole lot of broadband interferance from some sort of military grade jammer.   My sensors look like it\'s just snowing... I\'m flying totally blind."
  branches {
    responseText: "{{CC}}[Accept]{{/CC}}Alright, I\'ll find and disable the jammer.  Sit tight."
    actions {
      ops {
        functionName: "Set Waypoint on Actor"
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "PrimaryOrSecondary"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Actor)"
            args {
              string_value: "534c6535666538e80a006045"
            }
          }
        }
      }
      ops {
        functionName: "Set Goal Status"
        args {
          call_value {
            functionName: "Get Map Item (Goal)"
            args {
              string_value: "SubQuest: Disable the Radar Jammer"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "GoalStatus"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: -1
  }
  branches {
    responseText: "{{CC}}[Decline]{{/CC}}Seriously?   You could fly that bird with plascrete covering the windows... I\'ve got plenty on my plate already, partner."
    nextNodeIndex: 6
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "534a2279613131440d000dc1"
  }
}
nodes {
  idRef {
    id: "5340c1e4666538e80b006ba4"
  }
  index: 6
  text: "Copy that, $(story.Nickname)... I\'ll do my best up here."
  branches {
    responseText: "Copy.   Jack out."
    actions {
      ops {
        functionName: "Set Goal Status"
        args {
          call_value {
            functionName: "Get Map Item (Goal)"
            args {
              string_value: "SubQuest: Disable the Radar Jammer"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "GoalStatus"
            }
            args {
              int_value: 3
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
      }
      ops {
        functionName: "Clear Waypoint from Prop"
        args {
          call_value {
            functionName: "Get Map Item (Prop)"
            args {
              string_value: "52de0797666538e009002422"
            }
          }
        }
      }
      ops {
        functionName: "Send Event After Delay"
        args {
          call_value {
            functionName: "Get Map Item (Event)"
            args {
              string_value: "SeaHawk.QuestCount"
            }
          }
        }
        args {
          call_value {
            functionName: "Random (float)"
            args {
              float_value: 10
            }
            args {
              float_value: 35
            }
          }
        }
      }
    }
    nextNodeIndex: -1
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "534a2279613131440d000dc1"
  }
}
nodes {
  idRef {
    id: "5340d605666538e80b006c60"
  }
  index: 7
  text: "There\'s a forward crew access hatch on the deck.   If an alarm is triggered, they may be able to flank you if they come out of that hatch.   I\'d recommend sealing it, before proceeding."
  branches {
    responseText: "{{CC}}[Accept]{{/CC}}Good looking out, Wheeler... I\'m on it."
    actions {
      ops {
        functionName: "Set Waypoint on Prop"
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "PrimaryOrSecondary"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Prop)"
            args {
              string_value: "5327db48613131d006000295"
            }
          }
        }
      }
      ops {
        functionName: "Set Goal Status"
        args {
          call_value {
            functionName: "Get Map Item (Goal)"
            args {
              string_value: "SubQuest: Seal The Hatch"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "GoalStatus"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: -1
  }
  branches {
    responseText: "{{CC}}[Decline]{{/CC}}Appreciate the heads up, but I think we can handle a couple of pointy eared deck swabbers."
    actions {
      ops {
        functionName: "Set Goal Status"
        args {
          call_value {
            functionName: "Get Map Item (Goal)"
            args {
              string_value: "SubQuest: Seal The Hatch"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "GoalStatus"
            }
            args {
              int_value: 3
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
      }
      ops {
        functionName: "Enable/Disable Interactable Object"
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "EnableOrDisable"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (InteractableObject)"
            args {
              string_value: "5327db48613131d006000295"
            }
          }
        }
      }
      ops {
        functionName: "Send Event After Delay"
        args {
          call_value {
            functionName: "Get Map Item (Event)"
            args {
              string_value: "SeaHawk.QuestCount"
            }
          }
        }
        args {
          call_value {
            functionName: "Random (float)"
            args {
              float_value: 10
            }
            args {
              float_value: 35
            }
          }
        }
      }
    }
    nextNodeIndex: 8
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "534a2279613131440d000dc1"
  }
}
nodes {
  idRef {
    id: "5340d8e6666538e80b006c64"
  }
  index: 8
  text: "Copy that, $(story.Nickname)."
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "534a2279613131440d000dc1"
  }
}
nodes {
  idRef {
    id: "5340da23666538e80b006cd5"
  }
  index: 9
  text: "A bad looking guy just walked out onto the deck... looks like he can handle himself pretty well.  Not a guy I think we ought to be leaving in our wake, $(story.Nickname)."
  branches {
    responseText: "{{CC}}[Accept]{{/CC}} Paint him for me Wheeler."
    nextNodeIndex: 10
  }
  branches {
    responseText: "{{CC}}[Decline]{{/CC}} I\'ve got all I can handle... Hopefully he\'ll stay far enough aside that we can sneak past him."
    nextNodeIndex: 11
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "534a2279613131440d000dc1"
  }
}
nodes {
  idRef {
    id: "5340dab3666538e80b006cd9"
  }
  index: 10
  text: "Hey $(story.Nickname)... Just thought you should know.   I peeked in on our new friend astrally... and he\'s active.   Very active.   He\'s going to have some serious magics to throw your way.   Be careful."
  branches {
    responseText: "Thanks, Trey.   I\'ve got him."
    actions {
      ops {
        functionName: "Activate Actor Spawner"
        args {
          call_value {
            functionName: "Get Map Item (Actor Reference)"
            args {
              string_value: "5340dc50666538e80b006d28"
            }
          }
        }
      }
      ops {
        functionName: "Set Waypoint on Actor"
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "PrimaryOrSecondary"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Actor)"
            args {
              string_value: "5340dc50666538e80b006d28"
            }
          }
        }
      }
      ops {
        functionName: "Set Goal Status"
        args {
          call_value {
            functionName: "Get Map Item (Goal)"
            args {
              string_value: "SubQuest: Eliminate Guard Captain"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "GoalStatus"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: -1
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "534601b2666538e00a005f9b"
  }
}
nodes {
  idRef {
    id: "5340db89666538e80b006cdc"
  }
  index: 11
  text: "I checked him out astrally... He\'s active.   And powerful.   Not someone we can just ignore, $(story.Nickname)...   I\'ll see if I can\'t take him out."
  branches {
    responseText: "Thanks, Cullen.  Give him hell."
    actions {
      ops {
        functionName: "Set Goal Status"
        args {
          call_value {
            functionName: "Get Map Item (Goal)"
            args {
              string_value: "SubQuest: Eliminate Guard Captain"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "GoalStatus"
            }
            args {
              int_value: 3
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
      }
      ops {
        functionName: "Send Event After Delay"
        args {
          call_value {
            functionName: "Get Map Item (Event)"
            args {
              string_value: "SeaHawk.QuestCount"
            }
          }
        }
        args {
          call_value {
            functionName: "Random (float)"
            args {
              float_value: 10
            }
            args {
              float_value: 20
            }
          }
        }
      }
      ops {
        functionName: "Play Sound"
        args {
          call_value {
            functionName: "Get Map Item (Sound)"
            args {
              string_value: "spellcasting"
            }
            args {
              string_value: "LightningBoltHit"
            }
          }
        }
        args {
          float_value: 10
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 0
            }
          }
        }
      }
      ops {
        functionName: "Trigger: Wait for Rounds"
        args {
          int_value: 1
        }
        args {
          call_value {
            functionName: "Get Map Item (SceneDimension)"
            args {
              string_value: "Default"
            }
          }
        }
      }
      ops {
        functionName: "Play Sound"
        args {
          call_value {
            functionName: "Get Map Item (Sound)"
            args {
              string_value: "ambient_tenement"
            }
            args {
              string_value: "ScreamWeird"
            }
          }
        }
        args {
          float_value: 10
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 0
            }
          }
        }
      }
    }
    nextNodeIndex: -1
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "534601b2666538e00a005f9b"
  }
}
nodes {
  idRef {
    id: "5340e358666538e80b006d9d"
  }
  index: 12
  text: "I\'ve got a pair of sentries near the security building, mid-ship.   Concider taking them out before they raise an alarm?"
  branches {
    responseText: "{{CC}}[Accept]{{/CC}} Sound plan, Wheeler.   I\'m on it."
    actions {
      ops {
        functionName: "Activate Actor Spawner By Tag"
        args {
          call_value {
            functionName: "Get Map Item (SenseTagList)"
            args {
              string_value: "Sentry"
            }
          }
        }
      }
      ops {
        functionName: "Set Waypoint on Actor"
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "PrimaryOrSecondary"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Actor)"
            args {
              string_value: "5340e218666538e80b006d75"
            }
          }
        }
      }
      ops {
        functionName: "Set Waypoint on Actor"
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "PrimaryOrSecondary"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Actor)"
            args {
              string_value: "5340e2a2666538e80b006d76"
            }
          }
        }
      }
      ops {
        functionName: "Set Goal Status"
        args {
          call_value {
            functionName: "Get Map Item (Goal)"
            args {
              string_value: "SubQuest: Take out the sentries."
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "GoalStatus"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: -1
  }
  branches {
    responseText: "{{CC}}[Decline]{{/CC}} Nah, frag \'em.   We\'ll sneak past them, and keep a smaller body count on this one."
    nextNodeIndex: 13
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "534a2279613131440d000dc1"
  }
}
nodes {
  idRef {
    id: "5340e441666538e80b006dc9"
  }
  index: 13
  text: "Wouldn\'t be my choice, $(story.Nickname)...  Leaving a guard behind you is a sure fire way to end up dying of accute lead poisioning..."
  branches {
    responseText: "Copy, Duran.   You want to take them?"
    actions {
      ops {
        functionName: "Play Sound"
        args {
          call_value {
            functionName: "Get Map Item (Sound)"
            args {
              string_value: "weapons"
            }
            args {
              string_value: "ShotgunHit"
            }
          }
        }
        args {
          float_value: 10
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 0
            }
          }
        }
      }
      ops {
        functionName: "Trigger: Wait for Rounds"
        args {
          int_value: 1
        }
        args {
          call_value {
            functionName: "Get Map Item (SceneDimension)"
            args {
              string_value: "Default"
            }
          }
        }
      }
      ops {
        functionName: "Play Sound"
        args {
          call_value {
            functionName: "Get Map Item (Sound)"
            args {
              string_value: "weapons"
            }
            args {
              string_value: "ShotgunHit"
            }
          }
        }
        args {
          float_value: 10
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 0
            }
          }
        }
      }
      ops {
        functionName: "Set Goal Status"
        args {
          call_value {
            functionName: "Get Map Item (Goal)"
            args {
              string_value: "SubQuest: Take out the sentries."
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "GoalStatus"
            }
            args {
              int_value: 3
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
      }
      ops {
        functionName: "Send Event After Delay"
        args {
          call_value {
            functionName: "Get Map Item (Event)"
            args {
              string_value: "SeaHawk.QuestCount"
            }
          }
        }
        args {
          call_value {
            functionName: "Random (float)"
            args {
              float_value: 10
            }
            args {
              float_value: 20
            }
          }
        }
      }
    }
    nextNodeIndex: 14
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "5345f597666538e00a005f98"
  }
}
nodes {
  idRef {
    id: "5340e4d8666538e80b006df6"
  }
  index: 14
  text: "Already done, $(story.Nickname)."
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "5345f597666538e00a005f98"
  }
}
nodes {
  idRef {
    id: "53410faf666538e80b0075da"
  }
  index: 15
  text: "I\'m with you, $(story.Nickname)."
  branches {
    responseText: "{{CC}}Summon Team{{/CC}}  Alright, I need everybody to move in on the security building, and secure this room."
    actions {
      ops {
        functionName: "Clear Actor Orders"
        args {
          call_value {
            functionName: "All Actors With Tag"
            args {
              call_value {
                functionName: "Get Map Item (SenseTagList)"
                args {
                  string_value: "Shield"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "AllOrAny"
                }
                args {
                  int_value: 0
                }
              }
            }
          }
        }
      }
      ops {
        functionName: "Teleport Actor"
        args {
          call_value {
            functionName: "All Actors With Tag"
            args {
              call_value {
                functionName: "Get Map Item (SenseTagList)"
                args {
                  string_value: "Aerial"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "AllOrAny"
                }
                args {
                  int_value: 0
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Specified Point (3D)"
            args {
              float_value: 115
            }
            args {
              float_value: 0
            }
            args {
              float_value: -88.5
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "FacingDirection"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "TeleportMethod"
            }
            args {
              int_value: 0
            }
          }
        }
      }
      ops {
        functionName: "Teleport Actor"
        args {
          call_value {
            functionName: "All Actors With Tag"
            args {
              call_value {
                functionName: "Get Map Item (SenseTagList)"
                args {
                  string_value: "Shield"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "AllOrAny"
                }
                args {
                  int_value: 0
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Specified Point (3D)"
            args {
              float_value: 115
            }
            args {
              float_value: 0
            }
            args {
              float_value: -88.5
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "FacingDirection"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "TeleportMethod"
            }
            args {
              int_value: 0
            }
          }
        }
      }
      ops {
        functionName: "Trigger: Run Alternate Trigger"
        args {
          call_value {
            functionName: "Get Map Item (Trigger)"
            args {
              string_value: "5345b3f8666538c4060016dd"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WaitOrNot"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 0
            }
          }
        }
      }
      ops {
        functionName: "Change Actor Control"
        args {
          call_value {
            functionName: "All Actors on Team"
            args {
              call_value {
                functionName: "Get Preset Value (string)"
                args {
                  string_value: "FactionList"
                }
                args {
                  int_value: 4
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "AllOrAny"
                }
                args {
                  int_value: 0
                }
              }
            }
            args {
              call_value {
                functionName: "Get Map Item (SceneDimension)"
                args {
                  string_value: "Default"
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "PlayerOrAI"
            }
            args {
              int_value: 0
            }
          }
        }
      }
      ops {
        functionName: "Change Actor Control"
        args {
          call_value {
            functionName: "All Actors on Team"
            args {
              call_value {
                functionName: "Get Preset Value (string)"
                args {
                  string_value: "FactionList"
                }
                args {
                  int_value: 5
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "AllOrAny"
                }
                args {
                  int_value: 0
                }
              }
            }
            args {
              call_value {
                functionName: "Get Map Item (SceneDimension)"
                args {
                  string_value: "Default"
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "PlayerOrAI"
            }
            args {
              int_value: 0
            }
          }
        }
      }
      ops {
        functionName: "Change Actor Team"
        args {
          call_value {
            functionName: "All Actors on Team"
            args {
              call_value {
                functionName: "Get Preset Value (string)"
                args {
                  string_value: "FactionList"
                }
                args {
                  int_value: 4
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "AllOrAny"
                }
                args {
                  int_value: 0
                }
              }
            }
            args {
              call_value {
                functionName: "Get Map Item (SceneDimension)"
                args {
                  string_value: "Default"
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (string)"
            args {
              string_value: "FactionList"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (SceneDimension)"
            args {
              string_value: "Default"
            }
          }
        }
      }
      ops {
        functionName: "Change Actor Team"
        args {
          call_value {
            functionName: "All Actors on Team"
            args {
              call_value {
                functionName: "Get Preset Value (string)"
                args {
                  string_value: "FactionList"
                }
                args {
                  int_value: 5
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "AllOrAny"
                }
                args {
                  int_value: 0
                }
              }
            }
            args {
              call_value {
                functionName: "Get Map Item (SceneDimension)"
                args {
                  string_value: "Default"
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (string)"
            args {
              string_value: "FactionList"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (SceneDimension)"
            args {
              string_value: "Default"
            }
          }
        }
      }
    }
    nextNodeIndex: -1
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "5345f497666538e00a005f95"
  }
  actions {
    ops {
      functionName: "Set Waypoint on Prop"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "PrimaryOrSecondary"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "5330cc92666538d407007374"
          }
        }
      }
    }
    ops {
      functionName: "Enable/Disable Interactable Object"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5330cc92666538d407007374"
          }
        }
      }
    }
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "534a2dab613131440d001233"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "53529ffa666538800a007ed5"
  }
  index: 16
  text: "Better do it quick, $(story.NickName)..."
  branches {
    responseText: ""
    nextNodeIndex: 17
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "534a2279613131440d000dc1"
  }
}
nodes {
  idRef {
    id: "5352a026666538800a007ed8"
  }
  index: 17
  text: "The shaped-charge!   Take out one of these walls, and we should be able to swim for it.   It won\'t be pleasant, but it beats riding this slab of steel to the ocean floor.\n\n{{CC}}Glancing around at the team, you see their grim determination.   To a man, they nod their approval.{{/CC}}"
  branches {
    responseText: "Alright... Lets do it.   I don\'t like it, but I don\'t see any other choices."
    nextNodeIndex: -1
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "5345e8d86665387404005f95"
  }
}
roots {
  nextNodeIndex: 0
}
